#!/usr/bin/env python
#
# This file is part of ddr-cmdln/kura
#

import argparse
import sys

from Kura.collection import OPERATIONS, description, epilog
from Kura.collection import create, destroy, update, sync
from Kura.collection import entity_create, entity_destroy


def main():
    parser = argparse.ArgumentParser(description=description, epilog=epilog)
    # no positional arguments
    parser.add_argument('-o', '--operation', choices=OPERATIONS,
                        help='Operation to perform.')
    parser.add_argument('-c', '--collection',
                        help='Absolute file path to the collection')
    parser.add_argument('-e', '--entity',
                        help='UID of entity to be added/removed to/from collection.')
    parser.add_argument('-f', '--file',
                        help='Relative path to updated file.')
    parser.add_argument('-u', '--user',
                        help='User who is performing the change.')
    parser.add_argument('-m', '--mail',
                        help='Email of user.')
    parser.add_argument('-d', '--debug', action='store_true',
                        help='Debug; prints lots of debug info.')
    args = parser.parse_args()

    if args.debug:
        print(args)
    if not args.user:
        sys.stderr.write('Specify a user!\n')
        sys.exit(1)
    if not args.mail:
        sys.stderr.write('Specify an email address!\n')
        sys.exit(1)
    if not args.operation:
        sys.stderr.write('Choose an operation!\n')
        sys.exit(1)
    
    # do something
    if   args.operation == 'status':   status(args.collection, args.debug)
    elif args.operation == 'create':   create(        args.user, args.mail, args.collection,              args.debug)
    elif args.operation == 'destroy':  destroy(       args.user, args.mail, args.collection,              args.debug)
    elif args.operation == 'update':   update(        args.user, args.mail, args.collection, [args.file],   args.debug)
    elif args.operation == 'sync':     sync(          args.user, args.mail, args.collection,              args.debug)
    elif args.operation == 'ecreate':  entity_create( args.user, args.mail, args.collection, args.entity, args.debug)
    elif args.operation == 'edestroy': entity_destroy(args.user, args.mail, args.collection, args.entity, args.debug)
    else:
        sys.stderr.write('We fell through!\n')
        sys.exit(1)

if __name__ == '__main__':
    main()
